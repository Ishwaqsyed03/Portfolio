name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Build with Next.js for static export
        run: |
          # Create a temporary next.config.ts for static export
          cat > next.config.ts << 'EOF'
          import type { NextConfig } from "next";
          import withPWAInit from "next-pwa";

          const withPWA = withPWAInit({
            dest: "public",
            register: true,
            skipWaiting: true,
            disable: process.env.NODE_ENV === "development",
          });

          const nextConfig: NextConfig = {
            output: 'export',
            trailingSlash: true,
            skipTrailingSlashRedirect: true,
            distDir: 'out',
            images: {
              unoptimized: true,
            },
            assetPrefix: '/Portfolio',
            basePath: '/Portfolio',
          };

          export default withPWA(nextConfig);
          EOF
          
          # Create a simple layout without admin routes for static export
          cat > src/app/layout-static.tsx << 'EOF'
          import type { Metadata, Viewport } from "next";
          import { Inter, JetBrains_Mono } from "next/font/google";
          import "./globals.css";
          import { ReactNode } from "react";
          import Navbar from "../components/Navbar";
          import CommandPalette from "../components/CommandPalette";
          import { SITE } from "../content/data";
          import PurpleFlameBackground from "../components/PurpleFlameBackground";

          const inter = Inter({ variable: "--font-sans", subsets: ["latin"] });
          const mono = JetBrains_Mono({ variable: "--font-mono", subsets: ["latin"] });

          export const metadata: Metadata = {
            title: SITE.title,
            description: SITE.description,
            icons: { icon: "/icons/icon-192.png" },
            manifest: "/site.webmanifest",
            metadataBase: new URL("https://ishwaqsyed03.github.io/Portfolio/"),
            openGraph: {
              title: SITE.title,
              description: SITE.description,
              type: "website",
              images: ["/Portfolio/nebula.jpg"],
              url: "/Portfolio/",
            },
            twitter: {
              card: "summary_large_image",
              title: SITE.title,
              description: SITE.description,
              images: ["/Portfolio/nebula.jpg"],
            },
          };

          export const viewport: Viewport = {
            themeColor: "#0f0f23",
          };

          export default function RootLayout({ children }: Readonly<{ children: ReactNode }>) {
            return (
              <html lang="en">
                <head>
                  <meta name="viewport" content="width=device-width, initial-scale=1" />
                  <meta name="theme-color" content="#0ea5e9" />
                  <link rel="manifest" href="/Portfolio/site.webmanifest" />
                </head>
                  <body className={`${inter.variable} ${mono.variable} antialiased bg-black text-white`}>
                    <PurpleFlameBackground />
                    <a href="#content" className="sr-only focus:not-sr-only focus:absolute focus:top-2 focus:left-2 z-50 bg-black text-white px-3 py-2 rounded">Skip to content</a>
                    <Navbar />
                    <CommandPalette />
                    <div id="content">{children}</div>
                  </body>
              </html>
            );
          }
          EOF
          
          # Remove admin and API routes for static build
          rm -rf src/app/admin || true
          rm -rf src/app/api || true
          
          # Replace layout.tsx with static version
          mv src/app/layout-static.tsx src/app/layout.tsx
          
          # Build the static site
          npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4